package com.example.Student_Library_Management_System.Services;

import com.example.Student_Library_Management_System.DTOs.StudentUpdateMobNoRequestDTO;
import com.example.Student_Library_Management_System.Enums.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;

    public String createStudent(Student student){


        // set the card entity whose value is not autogenerated
        Card card = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);
        card.setStudentVariableName(student);


        // lets go to the student entity

     student.setCard(card);

        // if we use bidirectional mapping then we need to save the both entity child as well as parent class entity
        // But we use bidirectional mapping we need to save only parent entity and child entity will automatic saved

        studentRepository.save(student);


        return "Student & Card added";
    }

    public String findNameByemail(String email){

        Student student = studentRepository.findByEmail(email);

        return student.getName();
    }

    public  String updateMobNo(StudentUpdateMobNoRequestDTO studentReq){

        // First we need to fetch the original data
        Student originalStudent = studentRepository.findById(studentReq.getId()).get();

        // we need to change those entity those we need & all entity as it is;;
        originalStudent.setMobileNo(studentReq.getMobileNo());


        studentRepository.save(originalStudent);

        return "Update student successfully";

    }
}
